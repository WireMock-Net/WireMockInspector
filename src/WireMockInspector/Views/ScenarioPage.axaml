<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:WireMockInspector.Views"
             xmlns:viewModels="clr-namespace:WireMockInspector.ViewModels"
             xmlns:avalonia="clr-namespace:Markdown.Avalonia;assembly=Markdown.Avalonia"
             x:DataType="viewModels:MainWindowViewModel"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="WireMockInspector.Views.ScenarioPage">
     <views:ContentWithSidebar IsSidebarOpen="{Binding SelectedScenario, Converter={x:Static ObjectConverters.IsNotNull}}">
            <views:ContentWithSidebar.Main>
              <DockPanel LastChildFill="True">
                <Grid ColumnDefinitions="Auto, *" DockPanel.Dock="Top">
                  <ComboBox Width="150" SelectedIndex="{Binding ScenarioTypeFilter}" Margin="0,0,10,0">
                    <ComboBoxItem IsSelected="True">All</ComboBoxItem>
                    <ComboBoxItem>Not Started</ComboBoxItem>
                    <ComboBoxItem>Started</ComboBoxItem>
                    <ComboBoxItem>Finished</ComboBoxItem>
                  </ComboBox>
                  <PathIcon Grid.Column="1" HorizontalAlignment="Right" ZIndex="10" Data="{StaticResource search_regular}" Margin="0,0,35,0" ></PathIcon>
                  <TextBox  Text="{Binding ScenarioTermFilter}" Grid.Column="1" Margin="0,0,25,0">

                  </TextBox>
                </Grid>

                <ListBox ItemsSource="{Binding FilteredScenarios}" SelectedItem="{Binding SelectedScenario}"   Margin="0 20, 10,0" Background="Transparent">
                  <ListBox.Styles>
                    <Style Selector="ListBoxItem">
                      <Setter Property="Padding" Value="0"></Setter>
                      <Setter Property="Margin" Value="0,5,20,5"></Setter>
                      <Setter Property="ClipToBounds" Value="True"></Setter>
                      <Setter Property="CornerRadius" Value="10"></Setter>
                    </Style>
                    <Style Selector="ListBoxItem:selected > ContentPresenter">
                      <Setter Property="Background" Value="#19ffffff"></Setter>
                    </Style>

                  </ListBox.Styles>
                  <ListBox.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:Scenario">
                      
                      <Border CornerRadius="10" ClipToBounds="True" BorderBrush="gray" BorderThickness="2" Margin="0">
                        <Border.Styles>
                          <Style Selector="PathIcon.finished">
                            <Setter Property="Data" Value="{StaticResource checkmark_circle_regular}"></Setter>
                            <Setter Property="Foreground" Value="green"></Setter>
                          </Style>
                          <Style Selector="PathIcon.started">
                            <Setter Property="Data" Value="{StaticResource play_circle_regular}"></Setter>
                            <Setter Property="Foreground" Value="orange"></Setter>
                          </Style>
                          <Style Selector="PathIcon.notstarted">
                            <Setter Property="Data" Value="{StaticResource question_circle_regular}"></Setter>
                            <Setter Property="Foreground" Value="red"></Setter>
                          </Style>

                        </Border.Styles>
                        <StackPanel Margin="10" Orientation="Vertical">
                          <Grid ColumnDefinitions="30,500,Auto"   >
                            <PathIcon
                              Margin="5,0, 15,0"
                              VerticalAlignment="Center"
                              Classes.notstarted="{Binding Status, Converter={x:Static viewModels:StringMatchConverter.Instance}, ConverterParameter=NotStarted}"
                              Classes.started="{Binding Status, Converter={x:Static viewModels:StringMatchConverter.Instance}, ConverterParameter=Started}"
                              Classes.finished="{Binding Status, Converter={x:Static viewModels:StringMatchConverter.Instance}, ConverterParameter=Finished}"
                            ></PathIcon>
                            <TextBlock Grid.Column="1"  Text="{Binding ScenarioName }" Foreground="white" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                              <Label>Current state:</Label>
                              <TextBlock Text="{Binding CurrentState}" Margin="5,0" VerticalAlignment="Center"></TextBlock>
                            </StackPanel>
                          </Grid>
                       </StackPanel>
                      </Border>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>
              </DockPanel>
            </views:ContentWithSidebar.Main>
            <views:ContentWithSidebar.Sidebar>
              <TabControl Classes="minor">
                <TabItem Header="Flow" >
                  <Grid Background="#404040">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical" >
                    </StackPanel>
                    <Image Margin="5" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{Binding SelectedScenario, Converter={x:Static  viewModels:GraphConverter.Instance}}"></Image>
                  </Grid>
                </TabItem>
                <TabItem Header="Transitions" >
                  <ScrollViewer HorizontalAlignment="Stretch" >
                  <ItemsControl Items="{Binding SelectedScenario.Transitions}">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <Expander HorizontalAlignment="Stretch">
                          <Expander.Header>
                            <StackPanel Orientation="Horizontal" Classes.Hit="{Binding Hit}" >
                              <StackPanel.Styles>
                                <Style Selector=".Hit TextBlock">
                                  <Setter Property="Foreground" Value="Green"></Setter>
                                </Style>
                              </StackPanel.Styles>
                              <TextBlock Text="{Binding Description}"></TextBlock>
                            </StackPanel>
                            
                          </Expander.Header>
                          <TabControl Classes="minor">
                            <TabItem Header="Definition">
                              <avalonia:MarkdownScrollViewer Markdown="{Binding MappingDefinition}"></avalonia:MarkdownScrollViewer>
                            </TabItem>
                            <TabItem Header="Triggered by">
                              <ItemsControl Items="{Binding TriggeredBy}">
                                <ItemsControl.ItemTemplate>
                                  <DataTemplate>
                                    <Expander HorizontalAlignment="Stretch">
                                      <Expander.Header>
                                        <StackPanel Orientation="Horizontal">
                                          <TextBlock VerticalAlignment="Center" Text="{Binding Timestamp}"></TextBlock>
                                          <TextBlock Margin="10,0" VerticalAlignment="Center" Text="{Binding Description}"></TextBlock>
                                        </StackPanel>
                                      </Expander.Header>
                                      <TabControl Classes="minor">
                                        <TabItem Header="Request">
                                          <avalonia:MarkdownScrollViewer Markdown="{Binding RequestDefinition}"></avalonia:MarkdownScrollViewer>
                                        </TabItem>
                                        <TabItem Header="Response">
                                          <avalonia:MarkdownScrollViewer Markdown="{Binding ResponseDefinition}"></avalonia:MarkdownScrollViewer>
                                        </TabItem>
                                      </TabControl>
                                    </Expander>
                                  </DataTemplate>
                                </ItemsControl.ItemTemplate>
                              </ItemsControl>
                            </TabItem>
                          </TabControl>
                        </Expander>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                 </ScrollViewer>
                </TabItem>
              </TabControl>
            </views:ContentWithSidebar.Sidebar>
          </views:ContentWithSidebar>
</UserControl>
