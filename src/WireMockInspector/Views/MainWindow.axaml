<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="clr-namespace:Markdown.Avalonia;assembly=Markdown.Avalonia"
        xmlns:views="clr-namespace:WireMockInspector.Views"
        xmlns:avaloniaEdit="https://github.com/avaloniaui/avaloniaedit"
        xmlns:viewModels="clr-namespace:WireMockInspector.ViewModels"
        xmlns:views1="clr-namespace:WireMockInspector.Views"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d" d:DesignWidth="850" d:DesignHeight="650"
        x:Class="WireMockInspector.Views.MainWindow"
        x:DataType="viewModels:MainWindowViewModel"
        Icon="/Assets/wiremockinspector.ico"
        Title="WireMockInspector"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        Width="1250"
        d:DataContext="{x:Static viewModels:DesignTimeData.MainViewModel}"
        >
  <Panel>
    <Panel.Styles>
      <Style Selector="avaloniaEdit|TextEditor">
        <Setter Property="ShowLineNumbers" Value="True"></Setter>
        <Setter Property="Padding" Value="5,5,5,20"></Setter>
      </Style>
    </Panel.Styles>
    <ExperimentalAcrylicBorder IsHitTestVisible="False">
      <ExperimentalAcrylicBorder.Material>
        <ExperimentalAcrylicMaterial
            BackgroundSource="Digger"
            TintColor="Black"
            TintOpacity="1"
            MaterialOpacity="0.65" />
      </ExperimentalAcrylicBorder.Material>
    </ExperimentalAcrylicBorder>
    <Grid RowDefinitions="Auto,*" Margin="40" >
      <Grid.Styles>
        <Style Selector="DockPanel.first">
          <Setter Property="Grid.ColumnSpan" Value="1"></Setter>
        </Style>
        <Style Selector="DockPanel.all">
          <Setter Property="Grid.ColumnSpan" Value="3"></Setter>
        </Style>
      </Grid.Styles>
      <StackPanel>
        <views1:NewVersionInfo DataContext="{Binding NewVersion}" IsVisible="{Binding IsVisible}"></views1:NewVersionInfo>
        <Grid ColumnDefinitions="*, Auto" >
          <TextBox MinWidth="1" Text="{Binding AdminUrl, Mode=TwoWay}" Watermark="Admin API URL"></TextBox>
          <Button Grid.Column="1" Command="{Binding LoadRequestsCommand}" Margin="10,0,0,0"  ToolTip.Tip="Load requests">
            <PathIcon Data="{StaticResource arrow_sync_circle_regular}" HorizontalAlignment="Center" VerticalAlignment="Center" ></PathIcon>
          </Button>
        </Grid>
      </StackPanel>
      <Image Source="../Assets/wiremockinspector.png"  IsVisible="{Binding !DataLoaded}"  Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Opacity="0.2"></Image>
      <TabControl Grid.Row="1" IsVisible="{Binding DataLoaded}" Padding="0,10">
          <TabItem Header="Requests" >
          <views:RequestPage></views:RequestPage>
        </TabItem>
        <TabItem Header="Mappings">
          <views:ContentWithSidebar IsSidebarOpen="{Binding SelectedMapping, Converter={x:Static ObjectConverters.IsNotNull}}">
            <views:ContentWithSidebar.Main>
              <DockPanel LastChildFill="True">
                <Grid ColumnDefinitions="Auto, *" DockPanel.Dock="Top">
                  <ComboBox Width="150" SelectedIndex="{Binding MappingTypeFilter}" Margin="0,0,10,0">
                    <ComboBoxItem IsSelected="True">All</ComboBoxItem>
                    <ComboBoxItem>Perfect match</ComboBoxItem>
                    <ComboBoxItem>Partial match</ComboBoxItem>
                    <ComboBoxItem>Not matched</ComboBoxItem>
                    <ComboBoxItem>Generated by proxy</ComboBoxItem>
                  </ComboBox>
                  <PathIcon Grid.Column="1" HorizontalAlignment="Right" ZIndex="10" Data="{StaticResource search_regular}" Margin="0,0,35,0" ></PathIcon>
                  <TextBox  Text="{Binding MappingSearchTerm}" Grid.Column="1" Margin="0,0,25,0">

                  </TextBox>
                </Grid>

                <ListBox ItemsSource="{Binding FilteredMappings}" SelectedItem="{Binding SelectedMapping}"   Margin="0 20, 10,0" Background="Transparent">
                  <ListBox.Styles>
                    <Style Selector="ListBoxItem">
                      <Setter Property="Padding" Value="0"></Setter>
                      <Setter Property="Margin" Value="0,5,20,5"></Setter>
                      <Setter Property="ClipToBounds" Value="True"></Setter>
                      <Setter Property="CornerRadius" Value="10"></Setter>
                    </Style>
                    <Style Selector="ListBoxItem:selected > ContentPresenter">
                      <Setter Property="Background" Value="#19ffffff"></Setter>
                    </Style>

                  </ListBox.Styles>
                  <ListBox.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:MappingViewModel">
                      <Border CornerRadius="10" ClipToBounds="True" BorderBrush="gray" BorderThickness="2" Margin="0">
                        <Border.Styles>
                          <Style Selector="PathIcon.perfect">
                            <Setter Property="Data" Value="{StaticResource checkmark_circle_regular}"></Setter>
                            <Setter Property="Foreground" Value="green"></Setter>
                          </Style>
                          <Style Selector="PathIcon.partial">
                            <Setter Property="Data" Value="{StaticResource checkmark_circle_regular}"></Setter>
                            <Setter Property="Foreground" Value="orange"></Setter>
                          </Style>
                          <Style Selector="PathIcon.unmatched">
                            <Setter Property="Data" Value="{StaticResource dismiss_circle_regular}"></Setter>
                            <Setter Property="Foreground" Value="red"></Setter>
                          </Style>

                        </Border.Styles>
                        <StackPanel Margin="10" Orientation="Vertical">
                          <Grid ColumnDefinitions="Auto,160,300,*"   >
                            <PathIcon
                                Margin="5,0, 15,0"
                                VerticalAlignment="Center"
                                Classes.perfect="{Binding HitType, Converter={x:Static viewModels:StringMatchConverter.Instance}, ConverterParameter=PerfectMatch}"
                                Classes.partial="{Binding HitType, Converter={x:Static viewModels:StringMatchConverter.Instance}, ConverterParameter=OnlyPartialMatch}"
                                Classes.unmatched="{Binding HitType, Converter={x:Static viewModels:StringMatchConverter.Instance}, ConverterParameter=Unmatched}"
                                            ></PathIcon>
                            <TextBlock Grid.Column="1" Text="{Binding UpdatedOn, StringFormat={}{0:s}}" Foreground="white" VerticalAlignment="Center" ></TextBlock>
                            <TextBlock Grid.Column="2"  Text="{Binding Id}" Width="300" Foreground="white" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                            <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center">
                              <Label>Perfect matches:</Label>
                              <TextBlock Text="{Binding PerfectHitCount}" Margin="5,0" VerticalAlignment="Center"></TextBlock>
                              <Label>Partial matches:</Label>
                              <TextBlock Text="{Binding PartialHitCount}" Margin="5,0" VerticalAlignment="Center"></TextBlock>
                            </StackPanel>
                          </Grid>
                          <StackPanel  Orientation="Vertical">
                            <TextBlock   Text="{Binding Title}" IsVisible="{Binding Title, Converter={x:Static ObjectConverters.IsNotNull}}" Foreground="white" VerticalAlignment="Center" Margin="5,5"></TextBlock>
                            <TextBlock  Text="{Binding Description}" IsVisible="{Binding Description, Converter={x:Static ObjectConverters.IsNotNull}}" Foreground="white" VerticalAlignment="Center" Margin="5,5"></TextBlock>
                          </StackPanel>
                        </StackPanel>

                      </Border>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>
              </DockPanel>
            </views:ContentWithSidebar.Main>
            <views:ContentWithSidebar.Sidebar>
              <TabControl Classes="minor">
                <TabItem Header="Definition">
                  <md:MarkdownScrollViewer Markdown="{Binding SelectedMapping.Content }"></md:MarkdownScrollViewer>
                </TabItem>
                <TabItem Header="Code">
                  <md:MarkdownScrollViewer Markdown="{Binding SelectedMapping.Code }"></md:MarkdownScrollViewer>
                </TabItem>
              </TabControl>
            </views:ContentWithSidebar.Sidebar>
          </views:ContentWithSidebar>
        </TabItem>
        <TabItem Header="Settings">
          <Grid RowDefinitions="*, Auto">
            <DataGrid Items="{Binding Settings}"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="True"
                  AutoGenerateColumns="False"
                  GridLinesVisibility="All"
                  HeadersVisibility="Column">
              <DataGrid.DataTemplates>
                <viewModels:SettingsWrapperTemplateSelector>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="bool">
                    <CheckBox IsChecked="{Binding Value}" HorizontalAlignment="Center"></CheckBox>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="bool?">
                    <CheckBox IsThreeState="True" IsChecked="{Binding Value}" HorizontalAlignment="Center"></CheckBox>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="string">
                    <TextBox Text="{Binding Value}" VerticalAlignment="Center"></TextBox>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="int">
                    <NumericUpDown Value="{Binding  Value}" HorizontalContentAlignment="Right"  ShowButtonSpinner="False" VerticalAlignment="Center"  ParsingNumberStyle="Number" Increment="1"></NumericUpDown>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="int?">
                    <NumericUpDown  Value="{Binding Value}" HorizontalContentAlignment="Right" ShowButtonSpinner="False"  VerticalAlignment="Center"  ParsingNumberStyle="Number" Increment="1"></NumericUpDown>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="Enum">
                    <ComboBox SelectedItem="{Binding Path=Value}" ItemsSource="{Binding Path=Type, Converter={x:Static viewModels:EnumItemsConverter.Instance}}" HorizontalAlignment="Stretch">
                    </ComboBox>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="object">
                    <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Foreground="Red"></TextBlock>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="stringlist">
                    <TextBox Text="{Binding Value, Converter={x:Static viewModels:StringListConverter.Instance}}" VerticalAlignment="Center" Foreground="Red"></TextBox>
                  </DataTemplate>
                </viewModels:SettingsWrapperTemplateSelector>
              </DataGrid.DataTemplates>
              <DataGrid.Styles>
                <Style Selector="DataGridColumnHeader">
                  <Setter Property="Background" Value="#505050"></Setter>
                </Style>
                <Style Selector="DataGridColumnHeader TextBlock">
                  <Setter Property="Foreground" Value="White"></Setter>
                </Style>
                <Style Selector="DataGridCell TextBlock">
                  <Setter Property="FontSize" Value="12"></Setter>
                </Style>
              </DataGrid.Styles>
              <DataGrid.Columns>
                <DataGridTextColumn Header="Attribute" SortMemberPath="Name" Binding="{Binding Name}"  IsReadOnly="True" />
                <DataGridTemplateColumn Header="Value" IsReadOnly="False" Width="400">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate x:DataType="viewModels:SettingsWrapper">
                      <ContentControl Content="{Binding}"></ContentControl>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
              </DataGrid.Columns>
            </DataGrid>
              <DockPanel Grid.Row="1" HorizontalAlignment="Stretch">
                  <Button Command="{Binding SaveServerSettings}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,10, 10, 10">Save settings</Button>
              </DockPanel>
          </Grid>
        </TabItem>
      </TabControl>


    </Grid>
  </Panel>

</Window>
