<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="clr-namespace:Markdown.Avalonia;assembly=Markdown.Avalonia"
        xmlns:views="clr-namespace:WireMockInspector.Views"
        xmlns:avaloniaEdit="https://github.com/avaloniaui/avaloniaedit"
        xmlns:viewModels="clr-namespace:WireMockInspector.ViewModels"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d" d:DesignWidth="850" d:DesignHeight="650"
        x:Class="WireMockInspector.Views.MainWindow"
        x:DataType="viewModels:MainWindowViewModel"
        Icon="/Assets/wiremockinspector.ico"
        Title="WireMockInspector"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        Width="1250"
        ExtendClientAreaToDecorationsHint="True"
        d:DataContext="{x:Static viewModels:DesignTimeData.MainViewModel}"
        Name="MW"
        >
<Border  BorderThickness="1,1,1,1"
         BorderBrush="#3baced">
          <Panel>
    <Panel.Styles>
    </Panel.Styles>
    <ExperimentalAcrylicBorder IsHitTestVisible="False">
      <ExperimentalAcrylicBorder.Material>
        <ExperimentalAcrylicMaterial
            BackgroundSource="Digger"
            TintColor="Black"
            TintOpacity="1"
            MaterialOpacity="0.65" />
      </ExperimentalAcrylicBorder.Material>
    </ExperimentalAcrylicBorder>
            <TextBlock Margin="10" HorizontalAlignment="Center" IsHitTestVisible="False" Text="{Binding Path=#MW.Title}"></TextBlock>
    <Grid RowDefinitions="Auto,*" Margin="40" >
      <Grid.Styles>
        <Style Selector="DockPanel.first">
          <Setter Property="Grid.ColumnSpan" Value="1"></Setter>
        </Style>
        <Style Selector="DockPanel.all">
          <Setter Property="Grid.ColumnSpan" Value="3"></Setter>
        </Style>
      </Grid.Styles>
      <StackPanel>
        <views:NewVersionInfo DataContext="{Binding NewVersion}" IsVisible="{Binding IsVisible}"></views:NewVersionInfo>
        <Grid ColumnDefinitions="*, Auto" >
          <TextBox MinWidth="1" Text="{Binding AdminUrl, Mode=TwoWay}" Watermark="Admin API URL" Name="AdminUrlCtr" ></TextBox>
          <Button Grid.Column="1" Command="{Binding LoadRequestsCommand}" Margin="10,0,0,0"  ToolTip.Tip="Load requests">
            <PathIcon Data="{StaticResource arrow_sync_circle_regular}" HorizontalAlignment="Center" VerticalAlignment="Center" ></PathIcon>
          </Button>
        </Grid>
      </StackPanel>
      <Image Source="../Assets/wiremockinspector.png"  IsVisible="{Binding !DataLoaded}"  Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Opacity="0.2"></Image>
      <TabControl Grid.Row="1" IsVisible="{Binding DataLoaded}" Padding="0,10">
          <TabItem Header="Requests" >
            <views:RequestPage></views:RequestPage>
          </TabItem>
        <TabItem Header="Mappings">
          <views:MappingPage></views:MappingPage>
        </TabItem>
        <TabItem Header="Scenarios">
          <views:ScenarioPage></views:ScenarioPage>
        </TabItem>
        <TabItem Header="Settings">
          <Grid RowDefinitions="*, Auto">
            <DataGrid ItemsSource="{Binding Settings}"
                  CanUserReorderColumns="False"
                  CanUserResizeColumns="True"
                  AutoGenerateColumns="False"
                  GridLinesVisibility="All"
                  HeadersVisibility="Column">
              <DataGrid.DataTemplates>
                <viewModels:SettingsWrapperTemplateSelector>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="bool">
                    <CheckBox IsChecked="{Binding Value}" HorizontalAlignment="Center"></CheckBox>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="bool?">
                    <CheckBox IsThreeState="True" IsChecked="{Binding Value}" HorizontalAlignment="Center"></CheckBox>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="string">
                    <TextBox Text="{Binding Value}" VerticalAlignment="Center"></TextBox>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="int">
                    <NumericUpDown Value="{Binding  Value}" HorizontalContentAlignment="Right"  ShowButtonSpinner="False" VerticalAlignment="Center"  ParsingNumberStyle="Number" Increment="1"></NumericUpDown>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="int?">
                    <NumericUpDown  Value="{Binding Value}" HorizontalContentAlignment="Right" ShowButtonSpinner="False"  VerticalAlignment="Center"  ParsingNumberStyle="Number" Increment="1"></NumericUpDown>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="Enum">
                    <ComboBox SelectedItem="{Binding Path=Value}" ItemsSource="{Binding Path=Type, Converter={x:Static viewModels:EnumItemsConverter.Instance}}" HorizontalAlignment="Stretch">
                    </ComboBox>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="object">
                    <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Foreground="Red"></TextBlock>
                  </DataTemplate>
                  <DataTemplate DataType="viewModels:SettingsWrapper" x:Key="stringlist">
                    <TextBox Text="{Binding Value, Converter={x:Static viewModels:StringListConverter.Instance}}" VerticalAlignment="Center" Foreground="Red"></TextBox>
                  </DataTemplate>
                </viewModels:SettingsWrapperTemplateSelector>
              </DataGrid.DataTemplates>
              <DataGrid.Styles>
                <Style Selector="DataGridColumnHeader">
                  <Setter Property="Background" Value="#505050"></Setter>
                </Style>
                <Style Selector="DataGridColumnHeader TextBlock">
                  <Setter Property="Foreground" Value="White"></Setter>
                </Style>
                <Style Selector="DataGridCell TextBlock">
                  <Setter Property="FontSize" Value="12"></Setter>
                </Style>
              </DataGrid.Styles>
              <DataGrid.Columns>
                <DataGridTextColumn Header="Attribute" SortMemberPath="Name" Binding="{Binding Name}"  IsReadOnly="True" />
                <DataGridTemplateColumn Header="Value" IsReadOnly="False" Width="400">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate x:DataType="viewModels:SettingsWrapper">
                      <ContentControl Content="{Binding}"></ContentControl>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Type" SortMemberPath="Name" Binding="{Binding TypeDescription}"  IsReadOnly="True" />
              </DataGrid.Columns>
            </DataGrid>
              <DockPanel Grid.Row="1" HorizontalAlignment="Stretch">
                  <Button Command="{Binding SaveServerSettings}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,10, 10, 10">Save settings</Button>
              </DockPanel>
          </Grid>
        </TabItem>
      </TabControl>


    </Grid>
  </Panel>

</Border>
</Window>
