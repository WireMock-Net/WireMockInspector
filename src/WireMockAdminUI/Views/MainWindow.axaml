<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:WireMockAdminUI.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="clr-namespace:Markdown.Avalonia;assembly=Markdown.Avalonia"
        xmlns:views="clr-namespace:WireMockAdminUI.Views"
        mc:Ignorable="d" d:DesignWidth="850" d:DesignHeight="650"
        x:Class="WireMockAdminUI.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="WireMockAdminUI"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        Width="1250"
        d:DataContext="{x:Static vm:DesignTimeData.MainViewModel}"
        >


  <Panel >
      <ExperimentalAcrylicBorder IsHitTestVisible="False">
          <ExperimentalAcrylicBorder.Material>
              <ExperimentalAcrylicMaterial
                  BackgroundSource="Digger"
                  TintColor="Black"
                  TintOpacity="1"
                  MaterialOpacity="0.65" />
          </ExperimentalAcrylicBorder.Material>
      </ExperimentalAcrylicBorder>
    <Grid RowDefinitions="Auto,*" Margin="40" >
        <Grid.Styles>
            <Style Selector="StackPanel.first">
                <Setter Property="Grid.ColumnSpan" Value="1"></Setter>
            </Style>
            <Style Selector="StackPanel.all">
                <Setter Property="Grid.ColumnSpan" Value="3"></Setter>
            </Style>
        </Grid.Styles>
        <Grid ColumnDefinitions="*, Auto" >
            <TextBox MinWidth="1" Text="{Binding AdminUrl}"></TextBox>
            <Button Grid.Column="1" Command="{Binding LoadRequestsCommand}" Margin="10,0,0,0" ToolTip.Tip="Load requests">
                <PathIcon Data="{StaticResource arrow_sync_circle_regular}" ></PathIcon>
            </Button>
        </Grid>
        <Grid IsVisible="{Binding Requests.Count}"  DockPanel.Dock="Bottom" ColumnDefinitions="*,Auto, 420" VerticalAlignment="Stretch" Grid.Row="1" Margin="0,10">
          <StackPanel Grid.Column="0" Classes.first="{Binding SelectedRequest, Converter={x:Static ObjectConverters.IsNotNull}}" Classes.all="{Binding SelectedRequest, Converter={x:Static ObjectConverters.IsNull}}">
           <Grid ColumnDefinitions="Auto, *">
               <ComboBox Width="150" SelectedIndex="{Binding RequestTypeFilter}" Margin="0,0,10,0">
                   <ComboBoxItem IsSelected="True">All</ComboBoxItem>
                   <ComboBoxItem>Matched</ComboBoxItem>
                   <ComboBoxItem>Not matched</ComboBoxItem>
               </ComboBox>
               <PathIcon Grid.Column="1" HorizontalAlignment="Left" Data="{StaticResource search_regular}" Margin="10,0,0,0" ></PathIcon>
               <TextBox  Text="{Binding RequestSearchTerm}" Grid.Column="1" Margin="0,0,25,0">
                   
               </TextBox>
           </Grid>
           
           <ListBox SelectedItem="{Binding SelectedRequest}" Items="{Binding FilteredRequests}"   Margin="0 20, 10,0" Background="Transparent">
           <ListBox.Styles>
             <Style Selector="ListBoxItem">
               <Setter Property="Padding" Value="0"></Setter>
               <Setter Property="Margin" Value="0,5,20,5"></Setter>
               <Setter Property="ClipToBounds" Value="True"></Setter>
               <Setter Property="CornerRadius" Value="10"></Setter>
             </Style>
             <Style Selector="ListBoxItem:selected > ContentPresenter">
               <Setter Property="Background" Value="#19ffffff"></Setter>
             </Style>

           </ListBox.Styles>
           <ListBox.ItemTemplate>
             <DataTemplate x:DataType="vm:RequestViewModel">
               <Border CornerRadius="10" ClipToBounds="True" BorderBrush="gray" BorderThickness="2" Margin="0">
                 <Grid ColumnDefinitions="Auto,160,60,*"   Margin="10">
                   <Panel Margin="5,0,15,0" VerticalAlignment="Center">
                     <PathIcon Data="{StaticResource dismiss_circle_regular}" Foreground="red" IsVisible="{Binding !IsMatched}" ></PathIcon>
                     <PathIcon Data="{StaticResource checkmark_circle_regular}" Foreground="green" IsVisible="{Binding IsMatched}" ></PathIcon>
                   </Panel>
                   <TextBlock Grid.Column="1" Text="{Binding Timestamp, StringFormat={}{0:s}}" Foreground="white" VerticalAlignment="Center" ></TextBlock>
                   <Border Grid.Column="2"  BorderThickness="2" Margin="5,0" VerticalAlignment="Center" CornerRadius="5" BorderBrush="green">
                     <TextBlock TextAlignment="Center"  Text="{Binding Method}" Margin="5" Foreground="white"></TextBlock>
                   </Border>
                   <TextBlock Grid.Column="3" Text="{Binding Path}" Foreground="white" VerticalAlignment="Center" Margin="10,0"></TextBlock>
                 </Grid>
               </Border>
             </DataTemplate>
           </ListBox.ItemTemplate>
         </ListBox>
       </StackPanel>
          <GridSplitter Grid.Column="1" Width="3" MinWidth="1" BorderThickness="0" VerticalAlignment="Stretch" IsVisible="{Binding SelectedRequest, Converter={x:Static ObjectConverters.IsNotNull}}"></GridSplitter>
            <TabControl Grid.Column="2" IsVisible="{Binding SelectedRequest, Converter={x:Static ObjectConverters.IsNotNull}}">
                <TabControl.Styles>
                    <Style Selector="TabItem">
                        <Setter Property="FontSize" Value="16"></Setter>
                    </Style>
                </TabControl.Styles>
                <TabItem Header="Request" >
                    <views:RequestDetails DataContext="{Binding Path=RelatedMapping.RequestParts }" />
                </TabItem>
                <TabItem Header="Response">
                    <views:RequestDetails DataContext="{Binding Path=RelatedMapping.ResponseParts }" />
                </TabItem>
            </TabControl>
      </Grid>
    </Grid>
  </Panel>

</Window>
